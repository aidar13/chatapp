openapi: 3.0.3
info:
  title: Chatapp
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://chatapp.loc'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jaron.greenfelder@example.net
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'uq.?|Ia81t-eP'
                lastName:
                  type: string
                  description: ''
                  example: quae
                firstName:
                  type: string
                  description: ''
                  example: similique
              required:
                - email
                - password
                - lastName
                - firstName
      security: []
  /api/token:
    post:
      summary: ''
      operationId: postApiToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lesly.klein@example.org
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 6$JLo=
              required:
                - email
                - password
      security: []
  /api/me:
    get:
      summary: ''
      operationId: getApiMe
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  description: ''
                  example: 2
                page:
                  type: integer
                  description: ''
                  example: 15
      security: []
  /api/users/chats:
    get:
      summary: ''
      operationId: getApiUsersChats
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  description: ''
                  example: 10
                page:
                  type: integer
                  description: ''
                  example: 15
      security: []
  /api/chats:
    post:
      summary: ''
      operationId: postApiChats
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 19
              required:
                - userId
      security: []
  '/api/chats/{id}/message':
    post:
      summary: ''
      operationId: postApiChatsIdMessage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatId:
                  type: integer
                  description: ''
                  example: 3
                text:
                  type: string
                  description: ''
                  example: et
              required:
                - chatId
                - text
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the chat.'
        example: eos
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
